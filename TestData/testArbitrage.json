{
    "comment": "Generate messages; duplicate into two streams; shuffle one; leak from the other",
    "pipe": {
        "small_test_message_producer" : {
			"name" : "MockMessageProducer",
			"message_count" : 0
        },
        "fan_out" : {
            "name" : "multiple_sources",
            "destination" : {
                "shuffler": {
                    "name": "shuffler",
                    "look_ahead": 150
                },
                "send_to_queue" : {
                    "name" : "send_30001_to_queue",
                    "queue" : "subscriber_queue"
                }
            },
            "destination": {
                "leaker": {
                    "name": "Leak messages",
                    "offset": 10,
                    "every": 47,
                    "count": 2
                },
                "send_to_queue" : {
                    "name" : "send_30002_to_queue",
                    "queue" : "subscriber_queue"
                }
            }               
        }
    }, 
    
    "comment" : "Push heartbeats into Queue",
    "pipe": {
        "heartbeat" : {
            "name": "HeartbeatGenerator",
            "milliseconds": 2000
        },
        "send_to_queue" : {
            "name" : "send_30001_to_queue",
            "queue" : "subscriber_queue"
        }
    },
    
    "comment": "Process messages from queue; arbitrage; check the results",
    "pipe":{
        "input_queue":{
            "name": "subscriber_queue",
            "entry_count" : 100
        },
        "ordered_merge":{
            "name": "Arbitrage",
            "look_ahead":500,
            "max_delay_heartbeats": 1
            },
        "comment":{
            "name": "Stopper",
            "shutdowns": 1
        },
        "small_test_message_consumer" : {
            "name": "MockMessageConsumer",
            "log_stats_on_exit": true
        }
    },
    "comment": "Control from console.",
    "pipe":{
        "console":{
            "name" : "console"
        }
    }
}
